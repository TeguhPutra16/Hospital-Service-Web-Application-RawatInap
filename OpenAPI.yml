openapi:  3.0.3
info:
  title: CAPSTONE PROJECT kamarRS
  version: 1.0.0
  description:  Dokumentasi Project 
  contact:
    email: 
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Anti-Gen/CAPSTONE-PORJECT-kamarRS/1.0.0


tags:
  - name: Auth
    description: "authentication"
  - name: Users
    description: "Manajemen data user"
  - name: Hospital staffs
    description: "Manajemen data staff Rumah sakit"
  - name: Hospitals
    description: "Manajemen data Rumah sakit"
  - name: Patiens
    description: "Manajemen data pasien"
  - name: Hospital Beds
    description: "Manajemen data tempat tidur di Rumah sakit"
  - name: Doctors
    description: "Manajemen data Dokter"
  - name: Policlinics
    description: "Manajemen data Poliklinik"
  - name: Daily Practice
    description: "Manajemen data praktek harian"
  - name: Check Up Reservations
    description: "Manajemen data reservasi checkup"
  - name: Beds Registrations
    description: "Manajemen data reservasi tempat tidur"
  - name: Invoice
    description: "Midtrans Callback"
  
paths:
  /login/user:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun user 
  /login/staff:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun staff
     


  /users:
    post:
      tags:
        - Users
      summary: add user
      description: Menambah data User (register)

    put:
      tags:
        - Users
      summary: Update data user
      description: Memperbarui data user

    get:
      tags:
        - Users
      summary: Get user by user_id
      description: Menampilkan data user yang sedang login

    
    delete:
      tags:
        - Users
      summary: Delete data users
      description: Menghapus data user

##############################################################
##############################################################
  /staffs:
    post:
      tags:
        - Hospital staffs
      summary: add Hospital staffs
      description: Menambah akun untuk staff rumah sakit

    put:
      tags:
        - Hospital staffs
      summary: Update staff data
      description: Memperbarui data staff Rumah sakit

    delete:
      tags:
        - Hospital staffs
      summary: Delete hospital staff account
      description: Menghapus akun staff rumah sakit

    get:
      tags:
        - Hospital staffs
      summary: Get staff data
      description: Menampilkan data staff rumah sakit

##############################################################
##############################################################

  /patiens:
    post:
      tags:
        - Patiens
      summary: Patient Registration
      description: Registrasi pasien
 
    get:
      tags:
        - Patiens
      summary: Get Patient Data
      description: Menampilakn Pasien yang di daftarkan oleh user

  /patiens/{patien_id}:
    post:
      tags:
        - Patiens
      summary: Update Patien Data
      description: Memperbarui data pasien

    delete:
      tags:
        - Patiens
      summary: Delete patient
      description: Menghapus data pasien 
    
    get:
      tags:
        - Patiens
      summary: Get Detail patien
      description: Menampilakn data detail pasien
  
##############################################################
##############################################################

  /hospitals:
    post:
      tags:
        - Hospitals
      summary: Register Hospital
      description: Menambahkan Rumah sakit sebagai mitra

    put:
      tags:
        - Hospitals
      summary: Update Hospital's data
      description: Memperbarui data rumah sakit
    
    delete:
      tags:
        - Hospitals
      summary: Delete Hospital
      description: Menghapus Data Rumah sakit 
    
    get:
      tags:
        - Hospitals
      summary: Get All hospitals
      description: Menampilkan Daftar Rumah sakit

  /hospitals/{hospital_id}:
    get:
      tags:
        - Hospitals
      summary: Get Detail Hospital
      description: Menampilkan detail rumah sakit

##############################################################
##############################################################

  /beds:
    post:
      tags:
        - Hospital Beds
      summary: add hospital bed
      description: Menambahkan data tempat tidur rumah sakit
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                nama_tempat_tidur: "anggrek 1"
                ruangan: "anggrek"
                kelas: "kelas 2"
                status: "available"
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create beds"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create beds"

    get:
      tags:
        - Hospital Beds
      summary: Get hospital beds
      description: Menampilkan data tempat tidur berdasarkan id rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: hospital_id
          description: "filter beds by hospital id"
          required: false
          in: query
          schema: 
            type: string
            example: "hospital_id"
      responses: 
        '201':
          description: List of beds by hospital id
          content: 
            application/json:
             schema:
              type: object
              example:
                status: "success"
                message: "success get all beds"
                data: 
                  - id: 1
                    hospital_id: 3
                    nama_tempat_tidur: "anggrek 1"
                    ruangan: "anggrek"
                    kelas: "kelas 2"
                    status: "available"
                  - id: 5
                    hospital_id: 3
                    nama_tempat_tidur: "mawar 3"
                    ruangan: "mawar"
                    kelas: "kelas 3"
                    status: "not available"
                  - id: 15
                    hospital_id: 3
                    nama_tempat_tidur: "melati 2"
                    ruangan: "melati"
                    kelas: "kelas 2"
                    status: "available"
        '500':
          $ref: '#/components/responses/500'  

  /beds/{bed_id}:
    get:
      tags:
        - Hospital Beds
      summary: Get hospital beds detail
      description: Menampilkan detail data tempat tidur di suatu rumah sakit
      security: 
        - JWTAuth: []
      parameters:
        - name: bed_id
          description: "bed_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      responses:
        '201':
          description: list beds data by bed id success
          content:
            application/json:
              schema:
                type: object
                example: 
                  status: "Success"
                  message: "success read beds by ID"
                  data:
                    id: 15
                    hospital_id: 3
                    nama_tempat_tidur: "melati 2"
                    ruangan: "melati"
                    kelas: "kelas 2"
                    status: "available"
        '500':
          $ref: '#/components/responses/500'      
    
    put:
      tags:
        - Hospital Beds
      summary: Update hospital bed 
      description: Memperbarui data tempat tidur suatu rumah sakit
      security: 
        - JWTAuth: []
      parameters:
        - name: bed_id
          description: "bed_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                nama_tempat_tidur: "melati 2"
                ruangan: "melati"
                kelas: "kelas 2"
                status: "available"
      responses:
        '201':
          description: update hospital bed
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update hospital bed"
        '500':
          $ref: '#/components/responses/500'
      

    delete:
      tags:
        - Hospital Beds
      summary: Delete specific hospital bed
      description: Menghapus data tempat tidur suatu rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: bed_id
          description: "bed_id"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: delete hospitals bed status
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success delete hospital bed"
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /doctors:
    post:
      tags:
        - Doctors
      summary: add doctor
      description: Menambahkan data Dokter 

    get:
      tags:
        - Doctors
      summary: Get Doctors
      description: Menampilkan data dokter yang didaftarkan oleh admin 

  /doctors/{doctors_id}:
    
    get:
      tags:
        - Doctors
      summary: Get doctor's detail 
      description: Menampilkan detail doctor yang didaftarkan oleh admin (admin hanya bisa menampilkan dokter yang dia daftarkan)
    
    put:
      tags:
        - Doctors
      summary: Update doctor's data
      description: Memperbarui data doctor yang didaftarkan oleh admin (admin hanya bisa Memperbarui data dokter yang dia daftarkan)

    delete:
      tags:
        - Doctors
      summary: Delete specific doctor
      description: Menghapus data tempat tidur suatu rumah sakit (admin hanya bisa menghapus dokter yang dia daftarkan)

##############################################################
##############################################################

  /policlinics:
    post:
      tags:
        - Policlinics
      summary: add Policlinics
      description: Menambahkan data Dokter 

    get:
      tags:
        - Policlinics
      summary: Get Policlinics
      description: Menampilkan daftar poliklinik suatu rumah sakit

  /policlinics/{policlinics_id}:
    
    get:
      tags:
        - Policlinics
      summary: Get policlinic's details
      description: Menampilkan detail policlinic 
    
    put:
      tags:
        - Policlinics
      summary: Update policlinic's details
      description: Memperbarui data policlinic

    delete:
      tags:
        - Policlinics
      summary: Delete specific policlinic
      description: Menghapus data Poliklinik

##############################################################
##############################################################

  /practices:
    post:
      tags:
        - Daily Practice
      summary: add Daily Practice
      description: Menambahkan data praktek harian
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                policlinic_id: 3
                tanggal_praktik: "2022-12-27"
                kuota_harian: 10
                status: "available"
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create beds"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create beds"

    get:
      tags:
        - Daily Practice
      summary: Get Daily Practice by policlinic_id
      description: Menampilkan daftar praktek harian suatu rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: policlinic_id
          description: "filter praktek harian by policlinic_id"
          required: false
          in: query
          schema: 
            type: string
            example: "policlinic_id"
      responses: 
        '201':
          description: List of praktek harian by policlinic_id
          content: 
            application/json:
             schema:
              type: object
              example:
                status: "success"
                message: "success get all daily_practice"
                data: 
                  - id: 1
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-27"
                    kuota_harian: 10
                    status: "available"
                  - id: 2
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-28"
                    kuota_harian: 10
                    status: "available"
                  - id: 15
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-29"
                    kuota_harian: 10
                    status: "not-available"
        '500':
          $ref: '#/components/responses/500'

  /practices/{practice_id}:
    
    get:
      tags:
        - Daily Practice
      summary: Get Daily Practice's details
      description: Menampilkan detail praktek harian
      security: 
        - JWTAuth: []
      parameters:
        - name: practice_id
          description: "practice_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      responses:
        '201':
          description: daily practice data by id success
          content:
            application/json:
              schema:
                type: object
                example: 
                  status: "Success"
                  message: "success read daily_practice by ID"
                  data:
                    id: 15
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-29"
                    kuota_harian: 10
                    status: "not-available"
        '500':
          $ref: '#/components/responses/500'  
    put:
      tags:
        - Daily Practice
      summary: Update Daily Practice's details
      description: Memperbarui data praktek harian
      security: 
        - JWTAuth: []
      parameters:
        - name: practice_id
          description: "practice_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                nama_tempat_tidur: "melati 2"
                ruangan: "melati"
                kelas: "kelas 2"
                status: "available"
      responses:
        '201':
          description: update praktik harian
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update praktik harian"
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /reservations:
    post:
      tags:
        - Check Up Reservations
      summary: add reservation
      description: Menambahkan data reservasi pasien check up
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                patient_id: 3
                practice_id: 10
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create reservations"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create reservations"

##############################################################
##############################################################

  /registrations:
    post:
      tags:
        - Beds Registrations
      summary: add patient registration
      description: Menambahkan data registrasi pasien icu/rawat inap
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                patient_id: 255
                status_pasien: "pemeriksaan awal"
                biaya_registrasi: 25000
                order_id: "Postman-1578568851"
                link-pembayaran: "masih tidak tahu linknya bagaimana"
                status-pembayaran: "success"
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create registrations"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create registrations"
    get:
      tags:
        - Beds Registrations
      summary: Get beds registrations by hospital id
      description: Menampilkan data pendaftaran berdasarkan id rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: hospital_id
          description: "filter beds registrations by hospital_id"
          required: false
          in: query
          schema: 
            type: string
            example: "hospital_id"
      responses: 
        '201':
          description: List of beds registrations by hospital id
          content: 
            application/json:
             schema:
              type: object
              example:
                status: "success"
                message: "success get all beds registrations"
                data: 
                  - id: 1
                    hospital_id: 3
                    patient_id: 176
                    bed_id: 4
                    status_pasien: "pemeriksaan awal"
                    biaya_registrasi: 25000
                    order_id: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
                  - id: 5
                    hospital_id: 3
                    patient_id: 233
                    bed_id: 10
                    status_pasien: "rawat inap"
                    biaya_registrasi: 25000
                    order_id: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
                  - id: 15
                    hospital_id: 3
                    patient_id: 287
                    bed_id: 17
                    status_pasien: "dikembalikan ke wali"
                    biaya_registrasi: 25000
                    order_id: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
        '500':
          $ref: '#/components/responses/500'

  /registrations/{registration_id}:
    get:
      tags:
        - Beds Registrations
      summary: Get registration data
      description: Menampilkan data registrasi pasien
      security: 
        - JWTAuth: []
      parameters:
        - name: registration_id
          description: "registration_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      responses:
        '201':
          description: list beds registrations data by registrations_id success
          content:
            application/json:
              schema:
                type: object
                example: 
                  status: "Success"
                  message: "success read beds registrations by ID"
                  data:
                    id: 20
                    hospital_id: 3
                    patient_id: 255
                    bed_id: 16
                    status_pasien: "rawat inap"
                    biaya_registrasi: 25000
                    order_id: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
        '500':
          $ref: '#/components/responses/500' 

    put:
      tags:
        - Beds Registrations
      summary: update registration data
      description: Memperbarui data registrasi pasien
      security: 
        - JWTAuth: []
      parameters:
        - name: registration_id
          description: "registration_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                patient_id: 255
                bed_id: 15
                status_pasien: "pemeriksaan awal"
                biaya_registrasi: 25000
                order_id: "Postman-1578568851"
                link-pembayaran: "masih tidak tahu linknya bagaimana"
                status-pembayaran: "success"
      responses:
        '201':
          description: update hospital bed
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update hospital bed"
        '500':
          $ref: '#/components/responses/500'

    delete:
      tags:
        - Beds Registrations
      summary: Delete registration data
      description: Menghapus data registrasi pasien
      security:
        - JWTAuth: []
      parameters:
        - name: registration_id
          description: "registration_id"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: delete beds registration status
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success delete bed registrations"
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /midtrans:
    put:
      tags:
        - Invoice
      summary: callback
      description: callback pembayaran midtrans







 
 


    
####################################
#  COMPONENTS
####################################
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        status:
          type: boolean
        created_at:
          type: string
          format: date-time

    ResponseWithoutData:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
  responses:
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "data not found"


    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "internal server error"