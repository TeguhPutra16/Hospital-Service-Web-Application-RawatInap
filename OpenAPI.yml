openapi:  3.0.3
info:
  title: CAPSTONE PROJECT kamarRS
  version: 1.0.0
  description:  Dokumentasi Project 
  contact:
    name: kamarRS team
    email: lzfk0x9a@duck.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/kamar-rs/kamar-rs/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Anti-Gen/CAPSTONE-PORJECT-kamarRS/1.0.0
  - description: kamarRS server
    url: http://35.198.253.37:80
  - description: kamarRS domain
    url: https://rawatinap.online


tags:
  - name: Auth
    description: "authentication"
  - name: Users
    description: "Manajemen data user"
  - name: Hospital staffs
    description: "Manajemen data staff Rumah sakit"
  - name: Hospitals
    description: "Manajemen data Rumah sakit"
  - name: Patiens
    description: "Manajemen data pasien"
  - name: Hospital Beds
    description: "Manajemen data tempat tidur di Rumah sakit"
  - name: Doctors
    description: "Manajemen data Dokter"
  - name: Policlinics
    description: "Manajemen data Poliklinik"
  - name: Daily Practice
    description: "Manajemen data praktek harian"
  - name: Check Up Reservations
    description: "Manajemen data reservasi checkup"
  - name: Beds Registrations
    description: "Manajemen data reservasi tempat tidur"
  - name: Invoice
    description: "Midtrans Callback"
  - name: Kamar Rs Team
    description: "Manajemen data tim kamar rs"
  

paths:
  /login/users:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: "suyo@gmail.com"
                kata_sandi: "123456"
      responses:
        '201':
          description: Login berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Login berhasil"
                  data:
                      id: 1
                      email: "suyo@siloam.com"
                      token:  "afkdnnifnnj&h3"
                      
        '404' :
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /oauth/login/users:
    get:
      tags:
        - Auth
      summary: Login
      description: Login akun user dengan akun google

      responses:
        '201':
          description: Login berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Login berhasil"
                  data:
                      id: 1
                      email: "teguh@mail.com"
                      token:  "afkdnnifnnj&h3"
                      role: "user"
        '404' :
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /login/staffs:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun staff
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: "suyo@siloam.com"
                kata_sandi : "123456"
      responses:
        '201':
          description: Login berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Login berhasil"
                  data:
                      id: 1
                      email: "suyo@siloam.com"
                      token:  "afkdnnifnnj&h3"
                      role: "Admin"
        '404' :
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /login/kamarrsteams:
    post:
      tags:
        - Auth
      summary: Login
      description: Login akun kamar rs team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: "suyo@gmail.com"
                kata_sandi: "123456"
      responses:
        '201':
          description: Login berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Login berhasil"
                  data:
                      id: 1
                      email: "suyo@siloam.com"
                      peran: "super admin"
                      token:  "afkdnnifnnj&h3"
                      
        '404' :
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /users:
    post:
      tags:
        - Users
      summary: add user
      description: Menambah data User (register)
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                nama: "budi"
                email:  "budi@mail.com"
                no_nik: "7109287651997"
                no_kk:  "7190398173764"
                kata_sandi: "qwerty"
                no_telepon: "081234"
      responses:
        '201':
          description: Register berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "register berhasil"
        '400':
          description: Register gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "register gagal."
        '500':
          $ref: '#/components/responses/500'

    put:
      tags:
        - Users
      summary: Update data user
      description: Memperbarui data user
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                nama: "budi"
                email:  "budi@mail.com"
                no_nik: "7109287651997"
                no_kk:  "7190398173764"
                kata_sandi: "qwerty"
                no_telepon: "081234"
      responses:
        '201':
          description: Update berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Update berhasil"
        '400':
          description: Update gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "Update gagal."
        '500':
          $ref: '#/components/responses/500'

    get:
      tags:
        - Users
      summary: Get user by user_id
      description: Menampilkan data user yang sedang login
      security:
        - JWTAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get all users"
                  data:
                     id : 1
                     nama: "budi"
                     email:  "budi@mail.com"
                     no_nik: "7109287651997"
                     no_kk:  "7190398173764"
                     no_telepon: "081234"
                     
        '404':
          $ref: '#/components/responses/404'

        '500':
          $ref: '#/components/responses/500'

    
    delete:
      tags:
        - Users
      summary: Delete data users
      description: Menghapus data user 
      security:
        - JWTAuth: []
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete success"
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################
  /staffs:
    post:
      tags:
        - Hospital staffs
      summary: add Hospital staffs
      description: Menambah akun untuk staff rumah sakit
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                nama: teguh
                email: teguh@mail.com
                kata_sandi: "12345"
                peran: Admin
                hospital_id: 1
      responses:
        '201':
          description: Register berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "register berhasil"
        '400':
          description: Register gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "register gagal."
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Hospital staffs
      summary: Get staff data
      description: Menampilkan data staff rumah sakit
      security:
        - JWTAuth: []
      responses:
        '200':
          description: A list of staff
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get detail staff"
                  data:
                     id : 1
                     nama: teguh
                     email: teguh@mail.com
                     kata_sandi: "12345"
                     peran: Admin
                     hospital id : 1
                
        '404':
          $ref: '#/components/responses/404'

        '500':
          $ref: '#/components/responses/500'

  /staffs/{id_staff}:
    put:
      tags:
        - Hospital staffs
      summary: Update staff data
      description: Memperbarui data staff Rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: id_staff
          description: "id patient"
          required: true
          in: path
          schema:
            description: "id patient"
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                nama: teguh
                email: teguh@mail.com
                kata_sandi: "12345"
                peran: Admin
                hospital_id: 1
      responses:
        '201':
          description: Update berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "update data staff berhasil"
        '400':
          description: Update gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "Update data gagal."
        '500':
          $ref: '#/components/responses/500'


    delete:
      tags:
        - Hospital staffs
      summary: Delete hospital staff account
      description: Menghapus akun staff rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: id_staff
          description: "id patient"
          required: true
          in: path
          schema:
            description: "id patient"
            type: integer
            example: 1
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete success"

        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'



##############################################################
##############################################################

  /patients:
    post:
      tags:
        - Patiens
      summary: add new patient
      description: add new patient information to user profile
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/patientRequest"
            example:
              user_id: 1
              no_kk: "321654987321654"
              nik: "321654987321654"
              nama_pasien: "monkey d. luffy" 
              jenis_kelamin: "laki-laki"
              usia: "20"
              nama_wali: "monkey d. dragon"
              no_telepon_wali: "081321654987"
              email_wali: "dragon@gmail.com"
              alamat_ktp: "wind mill village"
              provinsi_ktp: "east blue"
              kabupaten/kota_ktp: "doma kingdom"
              alamat_domisili: "thousand sunny"
              provinsi_domisili: "grand line"
              kabupaten/kota_domisili: "always moving"
              tanggal_lahir: "1990-08-01"
              no_bpjs: "789456123"
              kelas_bpjs: "kelas_1"
              foto_ktp: "kanohhtihafnuef.jpg"
              foto_bpjs: "kanjtquihgsa.jpg"
      responses:
        '201':
          description: "success create patient info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success add new patient"
        '400':
          $ref: "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
   
  
  /patients/{patient_id}:
    put:
      tags:
        - Patiens
      summary: Update Patien Data
      description: Memperbarui data pasien
      security:
        - JWTAuth: []
      parameters:
        - name: patient_id
          description: "id patient"
          required: true
          in: path
          schema:
            description: "id patient"
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              $ref: "#/components/schemas/patientRequest"
            example:
              user_id: 1
              no_kk: "321654987321654"
              nik: "321654987321654"
              nama_pasien: "monkey d. luffy" 
              nama_wali: "monkey d. dragon"
              jenis_kelamin: "laki-laki"
              usia: "20"
              no_telepon_wali: "081321654987"
              email_wali: "dragon@gmail.com"
              alamat_ktp: "wind mill village"
              provinsi_ktp: "east blue"
              kabupaten/kota_ktp: "doma kingdom"
              alamat_domisili: "thousand sunny"
              provinsi_domisili: "grand line"
              kabupaten/kota_domisili: "always moving"
              tanggal_lahir: "1990-08-01"
              no_bpjs: "789456123"
              kelas_bpjs: "kelas_1"
              foto_ktp: "kanohhtihafnuef.jpg"
              foto_bpjs: "kanjtquihgsa.jpg"
      responses:
        '200':
          description: "update patientdata "
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success update patient"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Patiens
      summary: Delete patient
      description: Menghapus data pasien 
      security:
        - JWTAuth: []
      parameters:
        - name: patient_id
          description: "id patient"
          required: true
          in: path
          schema:
            description: "id patient"
            type: integer
            example: 1
      responses:
        '200':
          description: "delete patient data"
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success delete patient"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Patiens
      summary: Get Detail patien
      description: Menampilakn data detail pasien
      security:
        - JWTAuth: []
      parameters:
        - name: patient_id
          description: "id patient"
          required: true
          in: path
          schema:
            description: "id patient"
            type: integer
            example: 1
      responses:
        '200':
          description: "succes get patient by id"
          content:
            application/json:
              schema: 
                type: object
                $ref: "#/components/schemas/ResponsePatient"
              example:
                status: "succes"
                message: "success get patient data by id"
                data:
                  user_id: 1
                  no_kk: "321654987321654"
                  nik: "321654987321654"
                  nama_pasien: "monkey d. luffy" 
                  jenis_kelamin: "laki-laki"
                  usia: "20"
                  nama_wali: "monkey d. dragon"
                  email_wali: "dragon@gmail.com"
                  no_telepon_wali: "081321654987"
                  alamat_ktp: "wind mill village"
                  provinsi_ktp: "east blue"
                  kabupaten/kota_ktp: "doma kingdom"
                  alamat_domisili: "thousand sunny"
                  provinsi_domisili: "grand line"
                  kabupaten/kota_domisili: "always moving"
                  tanggal_lahir: "1990-08-01"
                  no_bpjs: "789456123"
                  kelas_bpjs: "kelas_1"
                  foto_ktp: "kanohhtihafnuef.jpg"
                  foto_bpjs: "kanjtquihgsa.jpg"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"

  /users/{user_id}/patients:
    get:
      tags:
        - Patiens
      summary: Get List of Patient realted to user
      description: Menampilakn pasien yang didaftarkan user
      security:
        - JWTAuth: []
      parameters:
        - name: user_id
          description: "id user"
          required: true
          in: path
          schema:
            description: "id user"
            type: integer
            example: 1     

      responses:
        '200':
          description: "succes get patient by user_id"
          content:
            application/json:
              schema: 
                type: object
                $ref: "#/components/schemas/ResponsePatient"
              example:
                status: "succes"
                message: "success get patient data by user_id"
                data:
                  - id: 1
                    user_id: 1
                    no_kk: "321654987321654"
                    nik: "321654987321654"
                    nama_pasien: "monkey d. luffy" 
                    jenis_kelamin: "laki-laki"
                    usia: "20"
                    nama_wali: "monkey d. dragon"
                    email_wali: "dragon@gmail.com"
                    no_telepon_wali: "081321654987"
                    alamat_ktp: "wind mill village"
                    provinsi_ktp: "east blue"
                    kabupaten/kota_ktp: "doma kingdom"
                    alamat_domisili: "thousand sunny"
                    provinsi_domisili: "grand line"
                    kabupaten/kota_domisili: "always moving"
                    tanggal_lahir: "1990-08-01"
                    no_bpjs: "789456123"
                    kelas_bpjs: "kelas_1"
                    foto_ktp: "kanohhtihafnuef.jpg"
                    foto_bpjs: "kanjtquihgsa.jpg"
                  - id: 2
                    user_id: 1
                    no_kk: "321654987321654"
                    nik: "321654987321654"
                    nama_pasien: "monkey d. luffy" 
                    jenis_kelamin: "laki-laki"
                    usia: "20"
                    nama_wali: "monkey d. dragon"
                    email_wali: "dragon@gmail.com"
                    no_telepon_wali: "081321654987"
                    alamat_ktp: "wind mill village"
                    provinsi_ktp: "east blue"
                    kabupaten/kota_ktp: "doma kingdom"
                    alamat_domisili: "thousand sunny"
                    provinsi_domisili: "grand line"
                    kabupaten/kota_domisili: "always moving"
                    tanggal_lahir: "1990-08-01"
                    no_bpjs: "789456123"
                    kelas_bpjs: "kelas_1"
                    foto_ktp: "kanohhtihafnuef.jpg"
                    foto_bpjs: "kanjtquihgsa.jpg"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"

  /hospitals:
    post:
      tags:
        - Hospitals
      summary: Register Hospital
      description: Menambahkan Rumah sakit sebagai mitra
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                kode_rs: "3275013"
                nama: "RSUD dr. Chasbullah Abdulmadjid"
                foto: "http://url.jpg"
                alamat: "Jalan Pramuka №55, Marga Jaya, Kec. Bekasi Selatan, Kota Bekasi, Jawa Barat 17141"
                provinsi: "jawa barat"
                kabupaten/kota: "Kota bekasi"
                kecamatan: "Bekasi Selatan"
                no_telepon: "021000"
                email: "rsbekasi@mail.com"
                kelas_rs: "Rumah Sakit Umum Kelas B"
                pemilik/pengelola: "Pemprov"
                jumlah_tempat_tidur: "100"
                status_penggunaan: "RSUD Provinsi"
                biaya_pendaftaran: 25000
      responses:
        '200':
          description: add hospital
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success Add hospital"
                  
             
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

    put:
      tags:
        - Hospitals
      summary: Update Hospital's data
      description: Memperbarui data rumah sakit
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                kode_rs: "3275013"
                nama: "RSUD dr. Chasbullah Abdulmadjid"
                foto: "http://url.jpg"
                alamat: "Jalan Pramuka №55, Marga Jaya, Kec. Bekasi Selatan, Kota Bekasi, Jawa Barat 17141"
                provinsi: "jawa barat"
                kabupaten/kota: "Kota bekasi"
                kecamatan: "Bekasi Selatan"
                no_telepon: "024400"
                email: "rsbekasi.mail.com"
                kelas_rs: "Rumah Sakit Umum Kelas B"
                pemilik/pengelola: "Pemprov"
                jumlah_tempat_tidur: "100"
                status_penggunaan: "RSUD Provinsi"
                biaya_pendaftaran: 25000
      responses:
        '200':
          description: update hospital's data
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update data hospital"
                  
             
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    
    delete:
      tags:
        - Hospitals
      summary: Delete Hospital
      description: Menghapus Data Rumah sakit 
      security:
        - JWTAuth: []
      responses:
        '201':
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "Delete success"
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    
    get:
      tags:
        - Hospitals
      summary: Get All hospitals
      description: Menampilkan Daftar Rumah sakit
      parameters:
        - name: provinsi
          description: "filter hospitals by provinsi"
          required: false
          in: query
          schema: 
            type: string
            example: "jawa timur"
        - name: kabupaten_kota
          description: "filter hospitals by kabupaten/kota"
          required: false
          in: query
          schema: 
            type: string
            example: "kota malang"
        - name: nama
          description: "filter hospitals by name"
          required: false
          in: query
          schema: 
            type: string
            example: "rs byouin"
        - name: page
          description: "shows result per page"
          required: false
          in: query
          schema: 
            type: integer
            example: 1
      responses:
        '200':
          description: A list of hospitals
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get hospitals"
                  data:
                    - id : 1
                      kode_rs: "3275013"
                      nama: "RSUD dr. Chasbullah Abdulmadjid"
                      foto: "http://url.jpg"
                      alamat: "Jalan Pramuka №55, Marga Jaya, Kec. Bekasi Selatan, Kota Bekasi, Jawa Barat 17141"
                      provinsi: "jawa barat"
                      kabupaten/kota: "Kota bekasi"
                      kecamatan: "Bekasi Selatan"
                      no_telepon: "024400"
                      email: "rsbekasi.mail.com"
                      kelas_rs: "Rumah Sakit Umum Kelas B"
                      pemilik/pengelola: "Pemprov"
                      jumlah_tempat_tidur: "100"
                      status_penggunaan: "RSUD Provinsi"
                      biaya_pendaftaran: "25.000"
                    - id : 2
                      kode_rs: "1174024"
                      nama: "RS Umum Az-Zuhra "
                      foto: "http://url.jpg"
                      alamat: "Jl. Pasar Inpres No.2 Desa Kutablang Kec. Banda"
                      provinsi: "sumatra"
                      kabupaten/kota: "Aceh"
                      kecamatan: "Banda sakti"
                      no_telepon: "024440"
                      email:  rsbekasi.mail.com"
                      kelas_rs: "D"
                      pemilik/pengelola: "perusahaan"
                      jumlah_tempat_tidur: "30"
                      status_penggunaan: "RSUD swasta"
                      biaya_pendaftaran: "25.000"

        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /hospitals/{hospital_id}:
    get:
      tags:
        - Hospitals
      summary: Get Detail Hospital
      description: Menampilkan detail rumah sakit
      parameters:
        - name: hospital_id
          description: "id rumah sakit"
          required: true
          in: path
          schema:
            description: "id rumah sakit"
            type: integer
            example: 1
      responses:
        '200':
          description:  hospital's Details
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get hospitals"
                  data:
                    id : 1
                    kode_rs: "3275013"
                    nama: "RSUD dr. Chasbullah Abdulmadjid"
                    foto: "http://url.jpg"
                    alamat: "Jalan Pramuka №55, Marga Jaya, Kec. Bekasi Selatan, Kota Bekasi, Jawa Barat 17141"
                    provinsi: "jawa barat"
                    kabupaten/kota: "Kota bekasi"
                    kecamatan: "Bekasi Selatan"
                    no_telepon: "024400"
                    email: "rsbekasi.mail.com"
                    kelas_rs: "Rumah Sakit Umum Kelas B"
                    pemilik/pengelola: "Pemprov"
                    jumlah_tempat_tidur: "100"
                    status_penggunaan: "RSUD Provinsi"
                    biaya_pendaftaran: "25.000"
                    


        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /beds:
    post:
      tags:
        - Hospital Beds
      summary: add hospital bed
      description: Menambahkan data tempat tidur rumah sakit
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                nama_tempat_tidur: "anggrek 1"
                ruangan: "anggrek"
                kelas: "kelas 2"
                status: "available"
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create beds"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create beds"

    get:
      tags:
        - Hospital Beds
      summary: Get hospital beds
      description: Menampilkan data tempat tidur berdasarkan id rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: hospital_id
          description: "filter beds by hospital id"
          required: false
          in: query
          schema: 
            type: string
            example: "hospital_id"
      responses: 
        '201':
          description: List of beds by hospital id
          content: 
            application/json:
             schema:
              type: object
              example:
                status: "success"
                message: "success get all beds"
                data: 
                  - id: 1
                    hospital_id: 3
                    nama_tempat_tidur: "anggrek 1"
                    ruangan: "anggrek"
                    kelas: "kelas 2"
                    status: "available"
                  - id: 5
                    hospital_id: 3
                    nama_tempat_tidur: "mawar 3"
                    ruangan: "mawar"
                    kelas: "kelas 3"
                    status: "not available"
                  - id: 15
                    hospital_id: 3
                    nama_tempat_tidur: "melati 2"
                    ruangan: "melati"
                    kelas: "kelas 2"
                    status: "available"
        '500':
          $ref: '#/components/responses/500'  

  /beds/{bed_id}:
    get:
      tags:
        - Hospital Beds
      summary: Get hospital beds detail
      description: Menampilkan detail data tempat tidur di suatu rumah sakit
      security: 
        - JWTAuth: []
      parameters:
        - name: bed_id
          description: "bed_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      responses:
        '201':
          description: list beds data by bed id success
          content:
            application/json:
              schema:
                type: object
                example: 
                  status: "Success"
                  message: "success read beds by ID"
                  data:
                    id: 15
                    hospital_id: 3
                    nama_tempat_tidur: "melati 2"
                    ruangan: "melati"
                    kelas: "kelas 2"
                    status: "available"
        '500':
          $ref: '#/components/responses/500'      
    
    put:
      tags:
        - Hospital Beds
      summary: Update hospital bed 
      description: Memperbarui data tempat tidur suatu rumah sakit
      security: 
        - JWTAuth: []
      parameters:
        - name: bed_id
          description: "bed_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                nama_tempat_tidur: "melati 2"
                ruangan: "melati"
                kelas: "kelas 2"
                status: "available"
      responses:
        '201':
          description: update hospital bed
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update hospital bed"
        '500':
          $ref: '#/components/responses/500'
      

    delete:
      tags:
        - Hospital Beds
      summary: Delete specific hospital bed
      description: Menghapus data tempat tidur suatu rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: bed_id
          description: "bed_id"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: delete hospitals bed status
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success delete hospital bed"
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /doctors:
    post:
      tags:
        - Doctors
      summary: add doctor
      description: Menambahkan data Dokter 
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/doctorRequest"
            example:
              nama: "tonny-tonny chopper"
              email: "chopper@mugiwara.com"
              bidang: "dokter umum"
              no_telpon: "634896216489"
      responses:
        '201':
          description: "success create doctor info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success add new doctor"
        '400':
          $ref: "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
      
    get:
      tags:
        - Doctors
      summary: Get Doctors
      description: Menampilkan data dokter yang didaftarkan oleh admin di rumah sakit tertentu
      security:
        - JWTAuth: []
      parameters:
        - name: id
          description: "hospital id"
          required: true
          in: query
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: "succes get doctor list"
          content:
            application/json:
              schema: 
                type: object
                $ref: "#/components/schemas/responseDoctors"
              example:
                status: "succes"
                message: "success get doctor data"
                data:
                  - doctor_id: 1
                    nama: "tonny-tonny chopper"
                    email: "chopper@mugiwara.com"
                    bidang: "dokter umum"
                    no_telpon: "634896216489"
                  - doctor_id: 2
                    nama: "trao"
                    email: "trao@heart.com"
                    bidang: "dokter umum"
                    no_telpon: "634896216489"   
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"

  /doctors/{doctor_id}:
    
    get:
      tags:
        - Doctors
      summary: Get doctor's detail 
      description: Menampilkan detail doctor yang didaftarkan oleh admin (admin hanya bisa menampilkan dokter yang dia daftarkan)
      security:
        - JWTAuth: []
      parameters:
        - name: doctor_id
          description: "id doctor"
          required: true
          in: path
          schema:
            description: "id doctor"
            type: integer
            example: 1
      responses:
        '200':
          description: "succes get doctor by id"
          content:
            application/json:
              schema: 
                type: object
                $ref: "#/components/schemas/responseDoctor"
              example:
                status: "succes"
                message: "success get doctor data by id"
                data:
                  doctor_id: 2
                  nama: "trao"
                  email: "trao@heart.com"
                  bidang: "dokter umum"
                  no_telpon: "634896216489" 
                  
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
    
    put:
      tags:
        - Doctors
      summary: Update doctor's data
      description: Memperbarui data doctor yang didaftarkan oleh admin (admin hanya bisa Memperbarui data dokter yang dia daftarkan)
      security:
        - JWTAuth: []
      parameters:
        - name: doctor_id
          description: "id doctor"
          required: true
          in: path
          schema:
            description: "id doctor"
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/doctorRequest"
            example:
              nama: "trao"
              email: "trao@heart.com"
              bidang: "dokter umum"
              no_telpon: "634896216489" 
              
      responses:
        '200':
          description: "update doctor data "
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success update doctor"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Doctors
      summary: Delete specific doctor
      description: Menghapus data tempat tidur suatu rumah sakit (admin hanya bisa menghapus dokter yang dia daftarkan)
      security:
        - JWTAuth: []
      parameters:
        - name: doctor_id
          description: "id doctor"
          required: true
          in: path
          schema:
            description: "id doctor"
            type: integer
            example: 1
      responses:
        '200':
          description: "delete doctor data"
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success delete doctor"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
##############################################################
##############################################################

  /policlinics:
    post:
      tags:
        - Policlinics
      summary: add Policlinics
      description: Menambahkan data Dokter 
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              $ref: "#/components/schemas/policlinicRequest"
            example:
              hospital_id: 1
              doctors_id: 1
              nama_poli: "poli gigi"
              jam_praktik: "09:00--15:00"
      responses:
        '201':
          description: "success create policlinic info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success add new policlinic"
        '400':
          $ref: "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Policlinics
      summary: Get Policlinics
      description: Menampilkan daftar poliklinik suatu rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: id
          description: "hospital id"
          required: true
          in: query
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: "succes get policlinic list"
          content:
            application/json:
              schema: 
                type: object
                $ref: "#/components/schemas/responsePoliclinics"
              example:
                status: "succes"
                message: "success get policlinic data"
                data:
                  - policlinic_id: 3
                    hospital_id: 1
                    doctors_id: 1
                    nama_poli: "poli gigi"
                    jam_praktik: "09:00--15:00"
                  - policlinic_id: 2
                    hospital_id: 1
                    doctors_id: 5
                    nama_poli: "poli mata"
                    jam_praktik: "09:00--15:00"
                  
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"

  /policlinics/{policlinic_id}:
    
    get:
      tags:
        - Policlinics
      summary: Get policlinic's details
      description: Menampilkan detail policlinic 
      security:
        - JWTAuth: []
      parameters:
        - name: policlinic_id
          description: "id poliklinik"
          required: true
          in: path
          schema:
            description: "id poliklinik"
            type: integer
            example: 1
      responses:
        '200':
          description: "succes get policlinic by id"
          content:
            application/json:
              schema: 
                type: object
                $ref: "#/components/schemas/responsePoliclinic"
              example:
                status: "succes"
                message: "success get policlinic data by id"
                data:
                    policlinic_id: 3
                    hospital_id: 1
                    doctors_id: 1
                    nama_poli: "poli gigi"
                    jam_praktik: "09:00--15:00"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"

    put:
      tags:
        - Policlinics
      summary: Update policlinic's details
      description: Memperbarui data policlinic
      security:
        - JWTAuth: []
      parameters:
        - name: policlinic_id
          description: "id poliklinik"
          required: true
          in: path
          schema:
            description: "id poliklinik"
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              $ref: "#/components/schemas/policlinicRequest"
            example:
              hospital_id: 1
              doctors_id: 1
              nama_poli: "poli gigi"
              jam_praktik: "09:00--15:00"
      responses:
        '200':
          description: "success update policlinic"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success update policlinic"
        '400':
          $ref: "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500" 

    delete:
      tags:
        - Policlinics
      summary: Delete specific policlinic
      description: Menghapus data Poliklinik
      security:
        - JWTAuth: []
      parameters:
        - name: policlinic_id
          description: "id policlinic"
          required: true
          in: path
          schema:
            description: "id policlinic"
            type: integer
            example: 1
      responses:
        '200':
          description: "delete policlinic data"
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success delete policlinic"
        "400" :
          $ref : "#/components/responses/400"  
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"

##############################################################
##############################################################

  /practices:
    post:
      tags:
        - Daily Practice
      summary: add Daily Practice
      description: Menambahkan data praktek harian
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                policlinic_id: 3
                tanggal_praktik: "2022-12-27"
                kuota_harian: 10
                status: "available"
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create beds"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create beds"

    get:
      tags:
        - Daily Practice
      summary: Get Daily Practice by policlinic_id
      description: Menampilkan daftar praktek harian suatu rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: policlinic_id
          description: "filter praktek harian by policlinic_id"
          required: false
          in: query
          schema: 
            type: string
            example: "policlinic_id"
      responses: 
        '201':
          description: List of praktek harian by policlinic_id
          content: 
            application/json:
             schema:
              type: object
              example:
                status: "success"
                message: "success get all daily_practice"
                data: 
                  - id: 1
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-27"
                    kuota_harian: 10
                    status: "available"
                  - id: 2
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-28"
                    kuota_harian: 10
                    status: "available"
                  - id: 15
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-29"
                    kuota_harian: 10
                    status: "not-available"
        '500':
          $ref: '#/components/responses/500'

  /practices/{practice_id}:
    
    get:
      tags:
        - Daily Practice
      summary: Get Daily Practice's details
      description: Menampilkan detail praktek harian
      security: 
        - JWTAuth: []
      parameters:
        - name: practice_id
          description: "practice_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      responses:
        '201':
          description: daily practice data by id success
          content:
            application/json:
              schema:
                type: object
                example: 
                  status: "Success"
                  message: "success read daily_practice by ID"
                  data:
                    id: 15
                    policlinic_id: 3
                    tanggal_praktik: "2022-12-29"
                    kuota_harian: 10
                    status: "not-available"
        '500':
          $ref: '#/components/responses/500'  
    put:
      tags:
        - Daily Practice
      summary: Update Daily Practice's details
      description: Memperbarui data praktek harian
      security: 
        - JWTAuth: []
      parameters:
        - name: practice_id
          description: "practice_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                nama_tempat_tidur: "melati 2"
                ruangan: "melati"
                kelas: "kelas 2"
                status: "available"
      responses:
        '201':
          description: update praktik harian
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update praktik harian"
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /reservations:
    post:
      tags:
        - Check Up Reservations
      summary: add reservation
      description: Menambahkan data reservasi pasien check up
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                patient_id: 3
                practice_id: 10
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create reservations"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create reservations"
  /practices/{practice_id}/reservations:   
    get:
      tags:
        - Check Up Reservations
      summary: Get All Reservations List by practice_id
      description: mendapatkan semua data reservasi pada praktek harian
      security: 
        - JWTAuth: []
      parameters:
        - name: practice_id
          description: "practice_id"
          required: true
          in: path
          schema:
            description: "practice_id"
            type: integer
            example: 255
      responses:
        '200':
          description: "succes get daily practice id"
          content:
            application/json:
              schema: 
                type: object
              example:
                status: "succes"
                message: "success get daily practice by id"
                data:
                  - id: 555
                    practice_id: 255
                    practice:
                      {
                        id: 255,
                        tanggal_praktik: "2022-12-30",
                        policlinic_id: 3,
                      }
                    patient:
                      {
                        id: 5,
                        no_kk: "321654987321654",
                        nik: "321654987321654",
                        nama_pasien: "monkey d. luffy",
                      }
                  - id: 666
                    practice_id: 255
                    practice:
                      {
                        id: 255,
                        tanggal_praktik: "2022-12-30",
                        policlinic_id: 3,
                      }
                    patient:
                      {
                        id: 25,
                        no_kk: "321654987321666",
                        nik: "321654987321666",
                        nama_pasien: "monkey d. dragon",

                      }
                  
        "400" :
          $ref : "#/components/responses/400" 
        '500':
          $ref: "#/components/responses/500"
          
  /reservations/{reservation_id}/:
    get:
      tags:
        - Check Up Reservations
      summary: Get Reservation Detail 
      description: mendapatkan detail reservasi
      security: 
        - JWTAuth: []
      parameters:
        - name: reservation_id
          description: "reservation_id"
          required: true
          in: path
          schema:
            description: "reservation_id"
            type: integer
            example: 555
      responses:
        '200':
          description: "succes get daily practice id"
          content:
            application/json:
              schema: 
                type: object
              example:
                status: "succes"
                message: "success get daily practice by id"
                data:
                  - id: 555
                    practice_id: 255
                    practice:
                      {
                        id: 255,
                        tanggal_praktik: "2022-12-30",
                        policlinic_id: 3,
                      }
                    patient:
                      {
                        id: 5,
                        no_kk: "321654987321654",
                        nik: "321654987321654",
                        nama_pasien: "monkey d. luffy",
                        jenis_kelamin: "laki-laki",
                        usia: 20,
                        nama_wali: "monkey d. dragon",
                        no_telepon_wali: "081321654987",
                        alamat_ktp: "wind mill village",
                        provinsi_ktp: "east blue",
                        kabupaten/kota_ktp: "doma kingdom",
                        alamat_domisili: "thousand sunny",
                        provinsi_domisili: "grand line",
                        kabupaten/kota_domisili: "always moving",
                        tanggal_lahir: "1990-08-01",
                        no_bpjs: "789456123",
                        kelas_bpjs: "kelas_1",
                        foto_ktp: "kanohhtihafnuef.jpg",
                        foto_bpjs: "kanjtquihgsa.jpg",
                      }

##############################################################
##############################################################

  /registrations:
    post:
      tags:
        - Beds Registrations
      summary: add patient registration
      description: Menambahkan data registrasi pasien icu/rawat inap
      security: 
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                hospital_id: 3
                patient_id: 255
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create registrations"
                  data: 
                    hospital_id: 3
                    patient_id: 255
                    biaya_registrasi: 25000
                    kode_daftar: "order-912"
                    status_pembayaran: "belum dibayar"
                    
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create registrations"
  /hospitals/{hospitalId}/registrations:
    get:
      tags:
        - Beds Registrations
      summary: Get beds registrations by hospital id
      description: Menampilkan data pendaftaran berdasarkan id rumah sakit
      security:
        - JWTAuth: []
      parameters:
        - name: hospitalId
          description: "filter beds registrations by hospital_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
        - name: page
          description: "shows result per page"
          required: false
          in: query
          schema: 
            type: integer
            example: 1
      responses: 
        '201':
          description: List of beds registrations by hospital id
          content: 
            application/json:
             schema:
              type: object
              example:
                status: "success"
                message: "success get all beds registrations"
                data: 
                  - id: 1
                    hospital_id: 3
                    patient_id: 176
                    bed_id: 4
                    status_pasien: "pemeriksaan awal"
                    biaya_registrasi: 25000
                    kode_daftar: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
                  - id: 5
                    hospital_id: 3
                    patient_id: 233
                    bed_id: 10
                    status_pasien: "rawat inap"
                    biaya_registrasi: 25000
                    kode_daftar: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
                  - id: 15
                    hospital_id: 3
                    patient_id: 287
                    bed_id: 17
                    status_pasien: "dikembalikan ke wali"
                    biaya_registrasi: 25000
                    kode_daftar: "Postman-1578568851"
                    link-pembayaran: "masih tidak tahu linknya bagaimana"
                    status-pembayaran: "success"
        '500':
          $ref: '#/components/responses/500'

  /registrations/{registration_id}:
    get:
      tags:
        - Beds Registrations
      summary: Get registration data
      description: Menampilkan data registrasi pasien
      security: 
        - JWTAuth: []
      parameters:
        - name: registration_id
          description: "registration_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      responses:
        '200':
          description: list beds registrations data by registrations_id success
          content:
            application/json:
              schema:
                type: object
                example: 
                  status: "Success"
                  message: "success read beds registrations by ID"
                  data: 
                  id: 27,
                  status_pasien: "waiting list"
                  biaya_registrasi: 25000
                  Kode_daftar: "order-ZaFHi"
                  payment_method: "transfer_va_bca"
                  link_pembayaran: "https://simulator.sandbox.midtrans.com/bca/va/index"
                  transaction_id: "93bab3a1-fd84-4752-9aa2-85794a703299"
                  virtual_account: "52185209770"
                  bank_penerima: "bank bca"
                  waktu_kedaluarsa: "2022-12-31 17:58:57 +0000 UTC"
                  qr_string: ""
                  status_pembayaran: "pending"
                  hospital_id: 1
                  bed_id: 0
              
        '500':
          $ref: '#/components/responses/500' 

    put:
      tags:
        - Beds Registrations
      summary: update registration data
      description: Memperbarui data registrasi pasien
      security: 
        - JWTAuth: []
      parameters:
        - name: registration_id
          description: "registration_id"
          required: true
          in: path
          schema: 
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                status_pasien: "pemeriksaan awal"
      responses:
        '201':
          description: update hospital bed
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success update hospital bed"
        '500':
          $ref: '#/components/responses/500'

    delete:
      tags:
        - Beds Registrations
      summary: Delete registration data
      description: Menghapus data registrasi pasien
      security:
        - JWTAuth: []
      parameters:
        - name: registration_id
          description: "registration_id"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: delete beds registration status
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success delete bed registrations"
        '500':
          $ref: '#/components/responses/500'

##############################################################
##############################################################

  /payments/{kode_daftar}:
    put: 
      tags:
        - Beds Registrations
      summary: payment for bed registration
      description: Menambahkan data registrasi pasien icu/rawat inap
      security: 
        - JWTAuth: []
      parameters:
        - name: kode_daftar
          description: "kode daftar"
          required: true
          in: path
          schema:
            description: "kode daftar"
            type: string
            example: "order-134"
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                metode_pembayaran:
                  type: string
                  enum:
                    - "transer_va_bca"
                    - "transer_va_bri"
                    - "transer_va_bni"
                    - "transer_va_permata"
                    - "qris"
              example: 
                metode_pembayaran: "transfer_va_bca"
      responses:
        '200':
          description: "success update payment for bed reservation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWithoutData"
              example:
                status: "success"
                message: "success create payment"
                data: 
                  status_pasien: "waiting list"
                  biaya_registrasi: 25000
                  Kode_daftar: "order-Hssy4"
                  payment_method: "transfer_va_bca"
                  link_pembayaran: "https://simulator.sandbox.midtrans.com/bca/va/index"
                  transaction_id: "6ffa1be9-28ae-4f44-ba88-e71f75d5899d"
                  virtual_account: "52185383264"
                  bank_penerima: "bank bca"
                  waktu_kedaluarsa: "2022-12-31 17:15:49 +0000 UTC"
                  qr_string: "lkfjaogfnbalksfio9wa"
                  status_pembayaran: "pending"
                  hospital_id: 1
        '400':
          $ref: "#/components/responses/400"
        "401" :
          $ref : "#/components/responses/401"  
        "404" :
          $ref : "#/components/responses/404"  
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Beds Registrations
      summary: get payment information for bed registration
      description: Menambahkan data registrasi pasien icu/rawat inap
      security: 
        - JWTAuth: []
      parameters:
        - name: kode_daftar
          description: "kode daftar"
          required: true
          in: path
          schema:
            description: "kode daftar"
            type: string
            example: "order-134"
      responses:
        "200":
          description: "success get payment info for order id"
          content:
            application/json:
              schema:
                type: object
                properties:
                  kode_daftar:
                    type: string 
                  metode_pembayaran:
                    type: string
                  biaya_registrasi:
                    type: integer
                    format: int64
                  link_pembayaran:
                    type: string
                  qr_string:
                    type: string
                  status_pembayaran:
                    type: string
              example:
                kode_daftar: "order-134"
                metode_pembayaran: "qris"
                biaya_registrasi: 25000
                link_pembayaran: "https:midtras/bayar"
                qr_string: "string untuk generate qr code"
                status_pembayaran: "belum dibayar"

##############################################################
##############################################################

  /midtrans:
    put:
      tags:
        - Invoice
      summary: callback
      description: callback pembayaran midtrans
      security:
        - JWTAuth: []
      responses:
        "200":
          description: Success update status.
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/ResponseObject"
              example:
                message: "success update status"
                data :
                  id_booking: 1
                  kode_daftar: "order-101"
                  gross_amount: 60000
                  status: "complete"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
  /kamarrsteams: 
    post:
      tags:
        - Kamar Rs Team
      summary: add kamar rs team account
      description: Menambahkan data tim kamar rs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                kata_sandi:
                  type: string
              example:
                email: "trial@gmail.com"
                kata_sandi: "password"
      responses:
        '201':
          description: penambahan data berhasil
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success create kamar rs team"
        '500':
          description: penambahan data gagal
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "failed create kamar rs team"





 
 


    
####################################
#  COMPONENTS
####################################
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "user Token"

  schemas:
    
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        status:
          type: boolean
        created_at:
          type: string
          format: date-time
    patientRequest: 
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        no_kk:
          type: string
        nik: 
          type: string
        nama_pasien: 
          type: string
        jenis_kelamin:
          type: string
          enum:
            - laki-laki 
            - perempuan
        usia:
          type: integer
        nama_wali:
          type: string
        no_telepon_wali:
          type: string
        email_wali:
          type: string
        alamat_ktp:
          type: string
        provinsi_ktp:
          type: string
        kabupaten/kota_ktp:
          type: string
        alamat_domisili:
          type: string
        provinsi_domisili:
          type: string
        kabupaten/kota_domisili:
          type: string
        tanggal_lahir:
          type: string
        no_bpjs:
          type: string
        kelas_bpjs:
          type: string
          enum:
            - kelas_1
            - kelas_2
            - kelas_3
        foto_ktp:
          type: string
          format: binary
        foto_bpjs:
          type: string
          format: binary
    patientResponse: 
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        no_kk:
          type: string
        nik: 
          type: string
        nama_pasien: 
          type: string
        jenis_kelamin:
          type: string
          enum:
            - laki-laki 
            - perempuan
        usia:
          type: integer
        nama_wali:
          type: string
        no_telepon_wali:
          type: string
        email_wali:
          type: string
        alamat_ktp:
          type: string
        provinsi_domisili:
          type: string
        kabupaten/kota_domisili:
          type: string
        tanggal_lahir:
          type: string
        no_bpjs:
          type: string
        kelas_bpjs:
          type: string
          enum:
            - kelas_1
            - kelas_2
            - kelas_3
        foto_ktp:
          type: string
          format: binary
        foto_bpjs:
          type: string
          format: binary
    policlinicRequest:
      type: object
      properties:
        hospital_id:
          type: integer
          format: int64
        doctors_id:
          type: integer
          format: int64
        nama_poli:
          type: string
        jam_praktik:
          type: string
    policlinicResponse:
      type: object
      properties:
        policlinic_id:
          type: integer
          format: int64
        hospital_id:
          type: integer
          format: int64
        doctors_id:
          type: integer
          format: int64
        nama_poli:
          type: string
        jam_praktik:
          type: string
    responsePoliclinic:
      type: object
      properties:
        res:
          type: object
          $ref: "#/components/schemas/ResponseObject"
        data: 
          type: object
          $ref: "#/components/schemas/policlinicResponse"
    responsePoliclinics:
      type: object
      properties:
        res:
          type: object
          $ref: "#/components/schemas/ResponseArray"
        data: 
          type: object
          $ref: "#/components/schemas/policlinicResponse"
    doctorRequest:
      type: object
      properties:
        nama: 
          type: string
        email:
          type: string
        bidang:
          type: string
        no_telepon:
          type: string
    doctorResponse:
      type: object
      properties:
        doctors_id:
          type: integer
          format: int64
        nama: 
          type: string
        email:
          type: string
        bidang:
          type: string
        no_telepon:
          type: string
    responseDoctor:
      type: object
      properties:
        res:
          type: object
          $ref: "#/components/schemas/ResponseObject"
        data: 
          type: object
          $ref: "#/components/schemas/doctorResponse"
    responseDoctors:
      type: object
      properties:
        res:
          type: object
          $ref: "#/components/schemas/ResponseArray"
        data: 
          type: object
          $ref: "#/components/schemas/doctorResponse"
    ResponseWithoutData:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    ResponseObject:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data: 
          type: object
    ResponseArray:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items: 
            type: object
    ResponsePatient:
      type: object
      properties:
        res: 
          type: object
          $ref: '#/components/schemas/ResponseObject'
        data:
          type: object
          $ref: "#/components/schemas/patientResponse"
    ResponsePatients:
      type: object
      properties:
        res: 
          type: object
          $ref: '#/components/schemas/ResponseArray'
        data:
          type: object
          $ref: "#/components/schemas/patientResponse"
  responses:
    '400':
      description: "Wrong Request From User"
      content:
        "application/json":
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
            properties:
              message:
                type: string
          example:
            message: "Process Failed. Please check your input."
    '401':
      description: "Authorization information is missing or invalid."
      content:
        "application/json":
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
            properties:
              message:
                type: string
          example:
            message: "Process Failed. User not authorized for this request."
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "data not found"


    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/ResponseWithoutData'
          example:
            status: "failed"
            message: "internal server error"
